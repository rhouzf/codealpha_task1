- name: Créer une instance EC2 et lancer des conteneurs ECS
  hosts: localhost
  connection: local
  gather_facts: true
  tasks:
    - name: Lancer une instance EC2
      amazon.aws.ec2_instance:
        name: my-ecs-instance
        instance_type: t2.micro
        key_name: f
        image_id: ami-0111c5910da90c2a7
        region: eu-west-3
        security_group: my_security_group
        count: 1
        vpc_subnet_id: subnet-076209c57ebf3a19a
        wait: yes
        volumes:
          - device_name: /dev/sdb
            ebs:
              volume_size: 8
              delete_on_termination: true
        tags:
          Name: my-ecs-instance
        network:
          public_ip: yes
        instance_initiated_shutdown_behavior: stop
        termination_protection: no
      register: ec2
    - name: Attendre que l'instance soit accessible
      ansible.builtin.wait_for:
        host: "{{ item.network_interfaces[0].association.public_ip }}"
        port: 22
        delay: 60
        timeout: 320
        state: started
      loop: "{{ ec2.instances }}"

    - name: Ajouter les nouvelles instances au groupe d'hôtes
      add_host:
        hostname: "{{ item.network_interfaces[0].association.public_ip }}"
        groupname: ec2hosts
      loop: "{{ ec2.instances }}"

- hosts: ec2hosts
  gather_facts: True
  tasks:
    - name: Installer l'agent ECS
      ansible.builtin.yum:
        name: ecs-init
        state: latest
      become: yes

    - name: Démarrer le service ECS
      ansible.builtin.service:
        name: ecs
        state: started
        enabled: yes
      become: yes

    - name: Configurer le cluster ECS
      ansible.builtin.lineinfile:
        path: /etc/ecs/ecs.config
        line: 'ECS_CLUSTER=my-ecs-cluster'
      become: yes

    - name: Redémarrer le service ECS
      ansible.builtin.service:
        name: ecs
        state: restarted
      become: yes

    - name: Créer la définition de tâche ECS
      community.aws.ecs_taskdefinition:
        family: my-task-definition
        state: present
        containers:
          - name: my-container-1
            image: nginx
            cpu: 512
            memory: 1024
            essential: yes
            portMappings:
              - containerPort: 80
                hostPort: 80
          - name: my-container-2
            image: nginx
            cpu: 512
            memory: 1024
            essential: yes
            portMappings:
              - containerPort: 8080
                hostPort: 8080

    - name: Lancer les tâches ECS
      community.aws.ecs_task:
        cluster: my-ecs-cluster
        task_definition: my-task-definition
        count: 2
        state: present
        launch_type: EC2
